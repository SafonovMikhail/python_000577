'''
–í–∑–ª–æ–º –ë—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª–∏ üå∂Ô∏è
–ù–µ–º–∞–ª–æ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤ –ø—É—Å—Ç–æ—à–∞—Ö –ú–æ—Ö–∞–≤–µ –ö—É—Ä—å–µ—Ä –∑–∞–±—Ä–µ–ª –≤ –•–∏–¥–¥–µ–Ω-–í—ç–ª–∏ ‚Äì —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –±—É–Ω–∫–µ—Ä –ë—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª–∏, –∏ –ª—é–±–µ–∑–Ω–æ —Å–æ–≥–ª–∞—à–∞–µ—Ç—Å—è –ø–æ–º–æ—á—å –∏–º –≤ —Ä–µ—à–µ–Ω–∏–∏ –∏—Ö –ø—Ä–æ–±–ª–µ–º. –û–¥–Ω–æ–π –∏–∑ —Ç–∞–∫–æ–π –ø—Ä–æ–±–ª–µ–º —è–≤–ª—è–ª—Å—è —Å—Ç—Ä–∞–Ω–Ω—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –≤–∏—Ä—É—Å, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—è–≤–ª—è–ª—Å—è –≤ –≤–∏–¥–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞—Ö –ë—Ä–∞—Ç—Å—Ç–≤–∞ –°—Ç–∞–ª–∏. –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ë—Ä–∞—Ç—Å—Ç–≤–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Å—Ç–∞–≤–ª—è—é—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∫–æ–¥—É, –∏ –ø–∏—à—É—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ Python, –ø–æ—ç—Ç–æ–º—É —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç—Ç–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–∏–∫–∞–∫ –Ω–µ –Ω–∞–≤—Ä–µ–¥–∏—Ç –∏–º. –ü–æ–º–æ–≥–∏—Ç–µ –ø–∏—Å—Ü—É –ò–±—Å–µ–Ω—É —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∏—Ç—Å—è —Å–∏–º–≤–æ–ª —Ä–µ—à—ë—Ç–∫–∏ –∏ —Å—Ä–∞–∑—É –∂–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ, –Ω–µ —Å—á–∏—Ç–∞—è –ø–µ—Ä–≤–æ–π. –î–∞–ª–µ–µ —Å–ª–µ–¥—É–µ—Ç nn —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Ç–µ –∂–µ —Å—Ç—Ä–æ–∫–∏, –Ω–æ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Å–∏–º–≤–æ–ª—ã –ø—É—Å—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫. –ü—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤–º–µ—Å—Ç–æ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞ –≤—ã–≤–æ–¥–∏—Ç—å –Ω–µ –Ω–∞–¥–æ.

Sample Input:

#12
print("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è")
name = input()
print("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å, –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è")    # –∞—Ö–∞—Ö–∞—Ö–∞—Ö –≤–∞–º –Ω–µ –ø–æ–π–º–∞—Ç—å –º–µ–Ω—è
password = input()
if password == "hoover":
    print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Ä—ã—Ü–∞—Ä—å", name)         #–¥–æ–ª–æ–π –ú–∞–∫–Ω–∞–º–∞—Ä—É
elif password == "noncr":
    print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ø–∞–ª–∞–¥–∏–Ω", name)
elif password == "gelios":
    print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å—Ç–∞—Ä–µ–π—à–∏–Ω–∞", name)          #–≠–ª–∞–π–¥–∂–∞ –≤–ø–µ—Ä—ë–¥
else:
    print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ø–æ—Å–ª—É—à–Ω–∏–∫", name)
Sample Output:

print("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è")
name = input()
print("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å, –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è")
password = input()
if password == "hoover":
    print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Ä—ã—Ü–∞—Ä—å", name)
elif password == "noncr":
    print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ø–∞–ª–∞–¥–∏–Ω", name)
elif password == "gelios":
    print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å—Ç–∞—Ä–µ–π—à–∏–Ω–∞", name)
else:
    print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ø–æ—Å–ª—É—à–Ω–∏–∫", name)
'''

# –ì—É–µ–≤
n = input()
for _ in range(int(n[1:])):
    s = input()
    if '#' in s:
        s = s[:s.find('#')]
    print(s.rstrip())

# @–ú–∏—Ö–∞–∏–ª, –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: #6 kdeaefk                           #tndjwd awk()()!!!...

# f01
# https://stackoverflow.com/questions/904746/how-to-remove-all-characters-after-a-specific-character-in-python
print(*map(lambda i: i.split('#')[0].rstrip(), __import__('sys').stdin.read().splitlines()[1:]), sep='\n')

# f02
n = input().split('#')
for i in range(int(n[1])):
    print(input().split('#')[0].rstrip())

# f03
[print(input().split('#')[0].rstrip()) for _ in range(int(input()[1:]))]

# f05
n, li = input(), []
for _ in range(int(n[1:])):
    s = input()
    if '#' in s:
        s = s[:s.find('#')].rstrip()
    li.append(s)
print(*li, sep='\n')

# f06
n = int(input()[1:])

for i in range(n):
    line = input().split('#')
    line = line[0].rstrip()
    print(line)

# f07
for i in range(int(input().replace('#', ''))):
    li = (input().split('#', 1))
    print(li[0].rstrip())

# f08
N = int(input().split('#')[-1])
for i in range(N):
    S = input().split('#')
    print(S[0].rstrip())

# f09
n = int(input().split('#')[1])
for _ in range(n):
    print(input().split('#')[0].rstrip())

# f10
n = int(input()[1:])
for i in range(n):
    s = input()
    m = []
    b = 0
    while s[b] == ' ':
        m.append('')
        b += 1
    m.extend(s.split())
    for w in m:
        if w == '':
            continue
        elif w[0] == '#':
            a = m.index(w)
            while a < len(m):
                del m[a]

    print(*m)

# f11
n = int(input()[1:])
for _ in range(n):
    s = input().split('#')
    print(s[0].rstrip())

# f12
n = int(input().replace('#', ''))
lst = []
for _ in range(n):
    lst.append(input().split('#')[0].rstrip())
print(*lst, sep='\n')

# f13
for _i in range(int(input()[1:])):
    print(input().split('#')[0].rstrip())

# f14
numbers = input()
amount_rows_str = ''
for i in numbers:
    if i.isdigit():
        amount_rows_str += i
    else:
        continue
amount_rows_int = int(amount_rows_str)
for j in range(amount_rows_int):
    row = input()
    if "#" in row:
        row_list = row.split("#")
        del row_list[-1]
        print(row_list[0].rstrip())
    else:
        row_list = []
        row_list.append(row)
        print(row_list[0].rstrip())

# f15
n = input()
n = n.replace('#', '')
for i in range(int(n)):
    string = input()
    if '#' in string:
        a = string.rfind('#')
        string = string[:a]
    print(string.rstrip())

# f16
n = int(input()[1:])
for _ in range(n):
    s = input()
    if '#' in s:
        s = s[:s.find('#')]
    print(s.rstrip())

# f17
[print((lambda a: a[:a.index("#") if "#" in a else None].rstrip())(input())) for _ in range(int(input()[1:]))]

# f18
n=int(input()[1:])
for i in range(n):
  a=input().split('#')
  print(a[0].rstrip())

# f19
s = input()
x = []
string = ''
for i in range(int(s[1:])):
    x = input()
    for j in range(len(x)):
        if '#' in x[j]:
            string += x[:x.index('#')].rstrip() + '\n'
            break
    else:
        string += x.rstrip() + '\n'
print(string)


# f20
n = int(input()[1:])
code = []

for _ in range(n):
    string = input().split('#')[0].rstrip()
    code.append(string)

print(*code, sep='\n')

# f21
h, l = input(), []
n = int(h[1:])

for i in range(n):
    s = input().split('#')
    l.append(s[0].rstrip())

print(*l, sep='\n')

# f22
print(*[input().split('#')[0].rstrip() for _i in range(int(input().lstrip('#')))], sep='\n')

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01

# f01
